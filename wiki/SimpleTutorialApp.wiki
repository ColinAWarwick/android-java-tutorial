#summary A simple tutorial app

_Continued from:_

http://code.google.com/p/android-java-tutorial/wiki/GettingStarted

= Introduction =
Just like the example here:

http://mobile.tutsplus.com/tutorials/android/android-sdk-creating-forms/

...we'll separate the program (in the Java code) from the presentation (in the XML resource code) because the benefit (robustness) outweighs the cost (overhead of passing info to and from Java to XML).


File #1:

{{{
// HelloTextView.java
package com.example.hellotextview;

import android.app.Activity;
import android.os.Bundle;
import android.widget.*;
// import android.content.Intent;
import android.view.View;

public class HelloTextView extends Activity {
    /** Called when the activity is first created. */
    Motor m = new Motor();
    Motor m2 = new Motor();
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

	    m.manufacturer = "Lego";
	    m2.manufacturer = "Tetrix";
    }
    public void whenOnButtonClicked(View button) {
	    final TextView theText = (TextView) findViewById(R.id.MotorStatus);
    	theText.setText(m.manufacturer + m.start());
    }
    public void whenOffButtonClicked(View button) {
	    final TextView theText = (TextView) findViewById(R.id.MotorStatus);
    	theText.setText(m.manufacturer + m.stop());
    }
    public void whenOnButton2Clicked(View button) {
	    final TextView theText = (TextView) findViewById(R.id.MotorStatus2);
    	theText.setText(m2.manufacturer + m2.start());
    }
    public void whenOffButton2Clicked(View button) {
	    final TextView theText = (TextView) findViewById(R.id.MotorStatus2);
    	theText.setText(m2.manufacturer + m2.stop());
    }
}

}}}

File #2:

{{{
// Motor.java
package com.example.hellotextview;

public class Motor {
	String manufacturer;
	boolean running = false;
	String start() {
		if (running == true) {
			return " is already running.";
		} else {
			running = true;
			return " is starting... running...";
		}
	}
	String stop() {
		if (running == true) {
			running = false;
			return " is stopping... stopped.";
		} else {
			return " is already stopped.";
		}
	}
}
}}}

File #3 layout/main.xml:
{{{
<?xml version="1.0" encoding="utf-8"?>

<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content" 
    android:layout_weight="1"
    android:orientation="vertical">
    <Button
        android:id="@+id/off_button"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:padding="10dp"
        android:text="@string/turn_off"
        android:onClick="whenOffButtonClicked"/>
    <Button
        android:id="@+id/on_button"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:padding="10dp"
        android:text="@string/turn_on"
        android:onClick="whenOnButtonClicked"/>
	<TextView
	    android:id="@+id/MotorStatus"  
	    android:layout_height="wrap_content"  
	    android:text="@string/motor_status_def"  
	    android:layout_width="fill_parent"/>
	 <Button
        android:id="@+id/off_button2"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:padding="10dp"
        android:text="@string/turn_off"
        android:onClick="whenOffButton2Clicked"/>
    <Button
        android:id="@+id/on_button2"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:padding="10dp"
        android:text="@string/turn_on"
        android:onClick="whenOnButton2Clicked"/>
	<TextView
	    android:id="@+id/MotorStatus2"  
	    android:layout_height="wrap_content"  
	    android:text="@string/motor_status_def"  
	    android:layout_width="fill_parent"/> 
</LinearLayout>   
}}}

File #4 values/strings.xml:
{{{
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="turn_on">On</string>
    <string name="turn_off">Off</string>
    <string name="motor_status_def">Unknown</string>
    <string name="app_name">HelloTextView</string>
</resources>
}}}



= Libraries are more important than language =

Ever since Brian Kernighan co-wrote the `hello, world` example in "The C Programming Language" with the author of C -- Dennis Ritchie -- writing code has been about leveraging the libraries of the language and platform in hand. When K&R published the first edition in 1978, a state-of-the-art PDP 11-70 had text terminals so the library call they leveraged was `printf()` from the standard I/O library. They taught us to `#include` the header file, `stdio.h`, and link the library at compile time. So it is here. Leveraging the libraries gives your code the functionality it needs.